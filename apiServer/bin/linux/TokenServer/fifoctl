#
# $Id: opensipsctl.fifo 6095 2009-09-08 14:24:20Z bogdan_iancu $
#
# opensips control tool for maintaining opensips
#
#===================================================================

##### ----------------------------------------------- #####
### FIFO specific variables and functions
#


#
##### ----------------------------------------------- #####
### parameters
#
if [ -z "$WL_FIFO" ]; then
	WL_FIFO=/tmp/whitelist_fifo
fi

#
##### ----------------------------------------------- #####
### functions
#
usage_fifo() {
	echo
	mecho " -- command 'fifo'"
	echo
cat <<EOF
 fifo ............................... send raw FIFO command
EOF
}
USAGE_FUNCTIONS="$USAGE_FUNCTIONS usage_fifo"

# process output from FIFO/Unixsock server; if everything is ok
# skip the first "ok" line and proceed to returned 
# parameters
filter_fl()
{
#	tail +2
	
	awk 'BEGIN {line=0;IGNORECASE=1;}
		{line++}
		/^$/ { next }
		{ print }'
	#awk 'BEGIN {line=0;IGNORECASE=1;}
	#	{line++}
	#	NR == 1 && /^200 OK/ { next }
	#	/^$/ { next }
	#	{ print }'
}

fifo_cmd()
{
	if [ "$#" -lt 1 ]; then
		echo "fifo_cmd must take at least command name as parameter"
		exit 1
	fi
	name=whitelist_receiver_$$
	path=$CHROOT_DIR/tmp/$name
	if [ ! -w $WL_FIFO ]; then
		echo "Error opening FIFO $WL_FIFO"
		echo "Make sure you have write permission of $WL_FIFO"
		exit 2
	fi
	if ! test -p $path; then
		mkfifo $path
		if [ $? -ne 0 ] ; then
			echo "error opening read fifo $path"
			exit 3
		fi
		chmod a+w $path
	fi

	# construct the command now
	CMD=":$1:$name\n";
	shift
	while [ -n "$1" ] ; do
		CMD="${CMD}${1}\n"
		shift
	done
	CMD="${CMD}\n"

	trap "rm -f $path; kill 0" 2

	# start reader now so that it is ready for replies
	# immediately after a request was sent out
	cat < $path | filter_fl &

	#echo "FIFO command was:\n$CMD"
	# issue FIFO request (printf taken to deal with \n)
	printf "$CMD" > $WL_FIFO
	
	# wait for the reader to complete
	wait
	rm $path -rf
}

fifo_cmd reload_whitelist
