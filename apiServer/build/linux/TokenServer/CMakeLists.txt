cmake_minimum_required(VERSION 2.6)
PROJECT(TokenServer)

#ADD_DEFINITIONS(-DDEBUG)
ADD_DEFINITIONS(-DTIXML_USE_STL)
#SET(GENERIC_FLAGS "-Wall -Wunused-value -Werror")
SET(GENERIC_FLAGS "-Wall")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${GENERIC_FLAGS}")
SET(CMAKE_VERBOSE_MAKEFILE TRUE)
SET(SRC_PATH ./../../../src)
SET(EXECUTABLE_OUTPUT_PATH ../../../bin/linux/TokenServer/bin)
message([STATUS|WARNING|AUTHOR_WARNING|FATAL_ERROR|SEND_ERROR] "message to display" ...)

INCLUDE_DIRECTORIES(${SRC_PATH})
INCLUDE_DIRECTORIES(/home/3rd-party/libevent-2.0.21/include)
INCLUDE_DIRECTORIES(/home/3rd-party/boost/include)
INCLUDE_DIRECTORIES(/home/3rd-party/log4cxx/include)
INCLUDE_DIRECTORIES(/home/3rd-party/json-c-0.9/include)
INCLUDE_DIRECTORIES(/home/3rd-party/cryptopp/include)
INCLUDE_DIRECTORIES(/home/3rd-party/poco/include)

LINK_DIRECTORIES(/home/3rd-party/boost/lib)
LINK_DIRECTORIES(/home/3rd-party/log4cxx/lib)
LINK_DIRECTORIES(/home/3rd-party/libevent-2.0.21/lib)
LINK_DIRECTORIES(/home/3rd-party/json-c-0.9/lib)
LINK_DIRECTORIES(/home/3rd-party/cryptopp/lib)
LINK_DIRECTORIES(/home/3rd-party/poco/lib)

SET(SRC_FILE ${SRC_FILE} ${SRC_PATH}/kugou/base/facility/ErrorMsg.cpp)
SET(SRC_FILE ${SRC_FILE} ${SRC_PATH}/kugou/base/facility/Demangle.cpp)
SET(SRC_FILE ${SRC_FILE} ${SRC_PATH}/kugou/base/facility/Exception.cpp)
SET(SRC_FILE ${SRC_FILE} ${SRC_PATH}/kugou/base/facility/Json.cpp)
SET(SRC_FILE ${SRC_FILE} ${SRC_PATH}/kugou/base/facility/log.cpp)
SET(SRC_FILE ${SRC_FILE} ${SRC_PATH}/kugou/base/facility/SysHealth.cpp)
SET(SRC_FILE ${SRC_FILE} ${SRC_PATH}/kugou/base/facility/Thread.cpp)
SET(SRC_FILE ${SRC_FILE} ${SRC_PATH}/kugou/base/facility/Clock.cpp)
SET(SRC_FILE ${SRC_FILE} ${SRC_PATH}/kugou/base/facility/Base64.cpp)

SET(SRC_FILE ${SRC_FILE} ${SRC_PATH}/kugou/base/net/HTTPServer.cpp)
SET(SRC_FILE ${SRC_FILE} ${SRC_PATH}/kugou/base/net/StreamSocket.cpp)
SET(SRC_FILE ${SRC_FILE} ${SRC_PATH}/kugou/base/net/HTTPConnection.cpp)
SET(SRC_FILE ${SRC_FILE} ${SRC_PATH}/kugou/base/net/HTTPConnectionManager.cpp)
SET(SRC_FILE ${SRC_FILE} ${SRC_PATH}/kugou/base/net/HTTPReply.cpp)
SET(SRC_FILE ${SRC_FILE} ${SRC_PATH}/kugou/base/net/HTTPRequestHandler.cpp)

SET(SRC_FILE ${SRC_FILE} ${SRC_PATH}/kugou/httpproxy/tokenserver/handler/CreateToken.cpp)
SET(SRC_FILE ${SRC_FILE} ${SRC_PATH}/kugou/httpproxy/tokenserver/handler/CheckToken.cpp)
SET(SRC_FILE ${SRC_FILE} ${SRC_PATH}/kugou/httpproxy/tokenserver/handler/WhiteListXml.cpp)
SET(SRC_FILE ${SRC_FILE} ${SRC_PATH}/kugou/httpproxy/tokenserver/handler/WhiteList.cpp)
SET(SRC_FILE ${SRC_FILE} ${SRC_PATH}/kugou/httpproxy/tokenserver/handler/FIFOServerHandle.cpp)

SET(SRC_FILE ${SRC_FILE} ${SRC_PATH}/kugou/httpproxy/tokenserver/tinyxml/tinyxml.cpp)
SET(SRC_FILE ${SRC_FILE} ${SRC_PATH}/kugou/httpproxy/tokenserver/tinyxml/tinyxmlparser.cpp)
SET(SRC_FILE ${SRC_FILE} ${SRC_PATH}/kugou/httpproxy/tokenserver/tinyxml/tinystr.cpp)
SET(SRC_FILE ${SRC_FILE} ${SRC_PATH}/kugou/httpproxy/tokenserver/tinyxml/tinyxmlerror.cpp)

SET(SRC_FILE ${SRC_FILE} ${SRC_PATH}/kugou/httpproxy/tokenserver/SystemConfig.cpp)
SET(SRC_FILE ${SRC_FILE} ${SRC_PATH}/kugou/httpproxy/tokenserver/main.cpp)

ADD_EXECUTABLE(TokenServer ${SRC_FILE})

TARGET_LINK_LIBRARIES(TokenServer log4cxx)
TARGET_LINK_LIBRARIES(TokenServer boost_system)
TARGET_LINK_LIBRARIES(TokenServer boost_thread)
TARGET_LINK_LIBRARIES(TokenServer boost_program_options)
TARGET_LINK_LIBRARIES(TokenServer boost_regex)
TARGET_LINK_LIBRARIES(TokenServer event)
TARGET_LINK_LIBRARIES(TokenServer json)
TARGET_LINK_LIBRARIES(TokenServer cryptopp)
TARGET_LINK_LIBRARIES(TokenServer PocoFoundation)
